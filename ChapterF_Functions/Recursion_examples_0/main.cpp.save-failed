#include <iostream>

using namespace std;

int powerLoop(int base, int exp)
{
    int result = 1 ;
    for (int ii = 0 ; ii < exp; ii++)
        result *= base ;
    return result ;
}

int powerRec(int base, int exp)
{
    // Base case
    if (exp == 0) return 1 ;
    // Recursive case
    else
        return base*powerRec(base,exp-1) ;
}

int powerRecEff(int base, int exp)
{
    // Base case
    if (exp == 0) return 1 ;
    // Recursive case
    else
    {
        int half = powerRecEff(base, exp / 2) ;
        if (exp % 2 == 0) return half * half ;
        else return base * half * half ;
    }
}

void testPower(int a, int b)
{
    cout << "Iterative formulaiton: " << a << "^" << b << " = " << powerLoop(a,b) << endl ;
    cout << "Recursive formaulation: " << a << "^" << b << " = " << powerRec(a,b) << endl ;
    cout << "Efficient recursive formaulation: " << a << "^" << b << " = " << powerRecEff(a,b) << endl ;
}

bool isPalindrome(string s)
{
    if (s.length() == 0) return true ;
}

void testPalindrome()
{
    cout << "Testing isPalindrome() ..." << endl ;
    if (isPalindrome)
        cout << s << " is a palindrome." << endl ;
    else
        cout << s << " is not a palindrome." << endl ;
}

int main()
{
    testPower(6,9) ;
    testPlindrome("") ;

    return 0;
}
